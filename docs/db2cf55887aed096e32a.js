import"./styles.css";import{Project,ToDoItem}from"./objects.js";import{saveNewProject,updateProject,getProjectByID,cleanDB}from"./storage.js";import{displayProject,editProject,updateProjectHtml,deleteProject,displayToDoList,displayToDoItem,editToDoItem,deleteToDoItem}from"./display.js";function attachEventListeners(){const t=document.getElementById("projects-container");if(!t)return void console.error("Projects container not found when attaching event listeners");t.addEventListener("click",(t=>{const e=t.target.closest(".project");if(!e)return;const o=e.dataset.projectID;if(t.target.classList.contains("edit"))"Edit"===t.target.textContent?editProject(o):updateProjectHtml(o);else if(t.target.classList.contains("delete"))deleteProject(o);else if(t.target.classList.contains("delete-todo")){const e=t.target.closest(".todo-item");if(e){const t=e.dataset.todoId;t?deleteToDoItem(o,t):console.error("Todo item does not have a todoId in its dataset")}else console.error("Could not find parent todo-item element")}else if(t.target.classList.contains("toggle-todos"))displayToDoList(o);else if(t.target.classList.contains("edit-todo")){const e=t.target.closest(".todo-item").dataset.todoId;"Edit"===t.target.textContent?editToDoItem(o,e):updateProjectHtml(o,e)}}));const e=document.getElementById("new-project");e&&e.addEventListener("click",(()=>{console.log("New project button clicked");const e=Object.keys(localStorage).reduce(((t,e)=>{try{const o=JSON.parse(localStorage[e]),r=o.internalID?parseInt(o.internalID,10):0;return Math.max(t,r)}catch(o){return console.error(`Error parsing localStorage item with key "${e}":`,o),t}}),0),o=new Project(e+1,"New Project","Add description here","06/19/2024",0,[]);displayProject(o,t),saveNewProject(o)})),t.addEventListener("click",(t=>{if(t.target.classList.contains("new-todo-button")){console.log("New to-do item button clicked");const e=t.target.closest(".project"),o=e.dataset.projectID,r=getProjectByID(o),n=r.toDoList.length+1,c=new ToDoItem(n,"New To-Do","Add description here","06/19/2024","Low"),s=e.querySelector(".todo-items"),a=s.querySelector(".new-todo-button"),i=document.createElement("div");displayToDoItem(c,i),s.insertBefore(i,a),r.toDoList.push(c),localStorage.setItem(o,JSON.stringify(r))}}))}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("projects-container");if(!t)return void console.error("Projects container not found in the DOM");if(0===Object.keys(localStorage).length){const e=new Project(0,"Project #1","Add description here","06/19/2024",0,[new ToDoItem(0,"title","description","today","1"),new ToDoItem(1,"title2","description2","tomorrow","2")]);saveNewProject(e),displayProject(e,t)}else Object.keys(localStorage).forEach((e=>{if("appTitle"!==e)try{const o=JSON.parse(localStorage[e]);o&&o.title&&o.description?displayProject(o,t):console.log(`Skipping invalid project data for key: ${e}`)}catch(t){console.error(`Error parsing project ${e}:`,t),delete localStorage[e]}}));attachEventListeners();const e=document.getElementById("app-title");e.addEventListener("input",(()=>{localStorage.setItem("appTitle",e.textContent),console.log("Title saved to local storage: ",e.textContent)}));const o=localStorage.getItem("appTitle");o?e.textContent=o:localStorage.setItem("appTitle",e.textContent)})),console.log(getProjectByID(1)),console.log(localStorage);